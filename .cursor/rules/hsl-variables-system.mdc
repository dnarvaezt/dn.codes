---
alwaysApply: true
---

# Sistema de Dise√±o Centralizado de shadcn/Tailwind

## Regla Principal

Este proyecto utiliza el **sistema de dise√±o completo de shadcn/Tailwind** como fuente de verdad √∫nica para todos los aspectos visuales y de espaciado.

**PROHIBIDO** crear valores hardcodeados o variables personalizadas sin validaci√≥n previa y justificaci√≥n expl√≠cita.

---

## üéØ Filosof√≠a del Sistema

### Principios Core

1. **Centralizaci√≥n**: Un solo lugar define cada aspecto del dise√±o
2. **Consistencia**: Todos los componentes usan las mismas variables y tokens
3. **Dinamismo**: Los temas pueden cambiar sin modificar componentes
4. **Reutilizaci√≥n**: Maximizar uso de utilidades existentes antes de crear nuevas
5. **Escalabilidad**: F√°cil mantener y extender sin comprometer el sistema

---

## üìê Categor√≠as del Sistema de Dise√±o

### 1. üé® Colores (Variables HSL)

#### Variables Protegidas de shadcn/Tailwind

```css
/* Variables Sem√°nticas de Color (NUNCA duplicar) */
--background          /* Fondo principal de la aplicaci√≥n */
--foreground          /* Texto principal sobre background */
--card                /* Fondo de tarjetas y contenedores */
--card-foreground     /* Texto sobre card */
--popover             /* Fondo de popovers y tooltips */
--popover-foreground  /* Texto sobre popover */
--primary             /* Color primario de marca */
--primary-foreground  /* Texto sobre primary */
--secondary           /* Color secundario */
--secondary-foreground /* Texto sobre secondary */
--muted               /* Elementos deshabilitados o secundarios */
--muted-foreground    /* Texto sobre muted */
--accent              /* Color de acento para highlights */
--accent-foreground   /* Texto sobre accent */
--destructive         /* Acciones destructivas (eliminar, error) */
--destructive-foreground /* Texto sobre destructive */
--border              /* Color de bordes */
--input               /* Bordes de inputs */
--ring                /* Anillos de foco (focus-visible) */
```

#### Reglas de Uso de Colores

**‚úÖ CORRECTO:**

```scss
// Uso directo de variables
.component {
  background-color: hsl(var(--background));
  color: hsl(var(--foreground));
  border: 1px solid hsl(var(--border));
}

// Con opacidad (no crear nueva variable)
.overlay {
  background-color: hsl(var(--background) / 0.8);
  backdrop-filter: blur(10px);
}

// En Tailwind
<div className="bg-background text-foreground border border-border">
```

**‚ùå PROHIBIDO:**

```scss
// Valores hex/rgb directos
.component {
  background-color: #ffffff;  // ‚ùå Usar hsl(var(--background))
  color: rgb(0, 0, 0);        // ‚ùå Usar hsl(var(--foreground))
}

// Duplicar variables existentes
:root {
  --my-bg: 0 0% 100%;         // ‚ùå Ya existe --background
  --custom-text: 0 0% 0%;     // ‚ùå Ya existe --foreground
}

// Clases de Tailwind hardcoded
<div className="bg-white text-black">  // ‚ùå Usar bg-background text-foreground
```

---

### 2. üî§ Tipograf√≠a

#### Variables de Fuentes (Tailwind Default)

**Usar clases de Tailwind, NO valores hardcodeados:**

```scss
// ‚ùå PROHIBIDO: Valores hardcodeados
.title {
  font-family: 'Inter', sans-serif;  // ‚ùå
  font-size: 24px;                   // ‚ùå
  font-weight: 700;                  // ‚ùå
  line-height: 1.5;                  // ‚ùå
}

// ‚úÖ CORRECTO: Clases de Tailwind
.title {
  @apply font-sans text-2xl font-bold leading-normal;
}

// O en JSX
<h1 className="font-sans text-2xl font-bold leading-normal">
```

#### Sistema de Tama√±os de Fuente (Tailwind Scale)

| Clase Tailwind | Tama√±o | Uso Sem√°ntico |
|----------------|--------|---------------|
| `text-xs` | 0.75rem (12px) | Metadatos, disclaimers |
| `text-sm` | 0.875rem (14px) | Texto secundario, subt√≠tulos |
| `text-base` | 1rem (16px) | Cuerpo de texto est√°ndar |
| `text-lg` | 1.125rem (18px) | Texto destacado |
| `text-xl` | 1.25rem (20px) | T√≠tulos peque√±os |
| `text-2xl` | 1.5rem (24px) | T√≠tulos de secci√≥n |
| `text-3xl` | 1.875rem (30px) | T√≠tulos principales |
| `text-4xl` | 2.25rem (36px) | T√≠tulos de p√°gina |
| `text-5xl` | 3rem (48px) | H√©roes, t√≠tulos grandes |
| `text-6xl` | 3.75rem (60px) | Display, landing pages |

#### Pesos de Fuente (Tailwind)

```scss
// ‚úÖ CORRECTO: Usar clases de Tailwind
.light   { @apply font-light; }      // 300
.normal  { @apply font-normal; }     // 400
.medium  { @apply font-medium; }     // 500
.semibold { @apply font-semibold; }  // 600
.bold    { @apply font-bold; }       // 700
.extrabold { @apply font-extrabold; } // 800
.black   { @apply font-black; }      // 900

// ‚ùå PROHIBIDO: Valores num√©ricos directos
.title {
  font-weight: 700;  // ‚ùå Usar font-bold
}
```

---

### 3. üìè Espaciado (Spacing Scale)

**Sistema de espaciado de Tailwind (basado en 0.25rem = 4px):**

#### Escala de Espaciado

| Clase | Valor | P√≠xeles | Uso Com√∫n |
|-------|-------|---------|-----------|
| `0` | 0 | 0px | Sin espacio |
| `px` | 1px | 1px | Bordes finos |
| `0.5` | 0.125rem | 2px | Espacios m√≠nimos |
| `1` | 0.25rem | 4px | Espacios muy peque√±os |
| `2` | 0.5rem | 8px | Espacios peque√±os |
| `3` | 0.75rem | 12px | Espacios compactos |
| `4` | 1rem | 16px | Espacios est√°ndar |
| `5` | 1.25rem | 20px | Espacios medios |
| `6` | 1.5rem | 24px | Espacios amplios |
| `8` | 2rem | 32px | Separaci√≥n de secciones |
| `10` | 2.5rem | 40px | Espacios grandes |
| `12` | 3rem | 48px | Espacios muy grandes |
| `16` | 4rem | 64px | Espacios extra grandes |
| `20` | 5rem | 80px | Espacios masivos |

#### Reglas de Uso

```scss
// ‚úÖ CORRECTO: Clases de Tailwind
.card {
  @apply p-4 m-2 gap-3;           // padding, margin, gap
  @apply space-y-4;                // espacio vertical entre hijos
  @apply px-6 py-3;                // padding horizontal y vertical
}

// ‚ùå PROHIBIDO: Valores hardcodeados
.card {
  padding: 16px;                   // ‚ùå Usar p-4
  margin: 8px;                     // ‚ùå Usar m-2
  gap: 12px;                       // ‚ùå Usar gap-3
}

// ‚ùå PROHIBIDO: Valores personalizados sin justificaci√≥n
.card {
  padding: 18px;                   // ‚ùå No est√° en la escala de Tailwind
  margin: 13px;                    // ‚ùå Valor arbitrario
}
```

---

### 4. üî≤ Bordes

#### Anchos de Borde (Tailwind)

```scss
// ‚úÖ CORRECTO: Usar clases de Tailwind
.element {
  @apply border;      // 1px
  @apply border-2;    // 2px
  @apply border-4;    // 4px
  @apply border-8;    // 8px
}

// Bordes espec√≠ficos por lado
.element {
  @apply border-t;    // top
  @apply border-r-2;  // right 2px
  @apply border-b-4;  // bottom 4px
  @apply border-l;    // left
}

// ‚ùå PROHIBIDO: Valores directos
.element {
  border-width: 3px;  // ‚ùå No est√° en escala de Tailwind
  border-top: 5px solid;  // ‚ùå Usar border-t-[5px] si es necesario
}
```

#### Colores de Borde

```scss
// ‚úÖ CORRECTO: Usar variables sem√°nticas
.element {
  @apply border border-border;           // Borde est√°ndar
  @apply border-2 border-primary;        // Borde primario
  @apply border border-destructive;      // Borde de error
  @apply border border-muted;            // Borde suave
}

// ‚ùå PROHIBIDO: Colores hardcoded
.element {
  border-color: #e5e7eb;  // ‚ùå Usar border-border
  border: 1px solid gray; // ‚ùå Usar border border-border
}
```

---

### 5. üîò Border Radius (Redondeo)

#### Variable de shadcn

```css
:root {
  --radius: 0.5rem;  /* Variable base de shadcn (NO modificar directamente) */
}
```

#### Clases de Tailwind (basadas en `--radius`)

```scss
// ‚úÖ CORRECTO: Usar clases de Tailwind
.element {
  @apply rounded-none;   // 0
  @apply rounded-sm;     // 0.125rem (2px)
  @apply rounded;        // 0.25rem (4px)
  @apply rounded-md;     // 0.375rem (6px)
  @apply rounded-lg;     // 0.5rem (8px) - valor por defecto de --radius
  @apply rounded-xl;     // 0.75rem (12px)
  @apply rounded-2xl;    // 1rem (16px)
  @apply rounded-3xl;    // 1.5rem (24px)
  @apply rounded-full;   // 9999px (c√≠rculo perfecto)
}

// Redondeo espec√≠fico por esquina
.element {
  @apply rounded-t-lg;      // top
  @apply rounded-r-xl;      // right
  @apply rounded-b-2xl;     // bottom
  @apply rounded-l-lg;      // left
  @apply rounded-tl-lg;     // top-left
  @apply rounded-tr-xl;     // top-right
}

// ‚ùå PROHIBIDO: Valores hardcodeados
.element {
  border-radius: 8px;           // ‚ùå Usar rounded-lg
  border-radius: 16px;          // ‚ùå Usar rounded-2xl
  border-top-left-radius: 12px; // ‚ùå Usar rounded-tl-xl
}
```

---

### 6. üåë Sombras (Shadows)

#### Sistema de Sombras de Tailwind

```scss
// ‚úÖ CORRECTO: Usar clases de Tailwind
.element {
  @apply shadow-sm;      // Sombra sutil
  @apply shadow;         // Sombra est√°ndar
  @apply shadow-md;      // Sombra media
  @apply shadow-lg;      // Sombra grande
  @apply shadow-xl;      // Sombra extra grande
  @apply shadow-2xl;     // Sombra masiva
  @apply shadow-inner;   // Sombra interior
  @apply shadow-none;    // Sin sombra
}

// Sombras con variables de color
.element {
  // Sombra que se adapta al tema
  box-shadow: 0 4px 12px hsl(var(--foreground) / 0.1);

  // Sombras m√∫ltiples
  box-shadow:
    0 1px 2px hsl(var(--foreground) / 0.05),
    0 4px 8px hsl(var(--foreground) / 0.1);
}

// ‚ùå PROHIBIDO: Sombras hardcodeadas
.element {
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);  // ‚ùå Usar shadow-md o variables HSL
  box-shadow: 2px 2px 10px #000;             // ‚ùå Usar shadow-lg o variables HSL
}

// Text Shadow con variables HSL
.title {
  text-shadow: 0 2px 4px hsl(var(--foreground) / 0.1);  // ‚úÖ
}
```

---

### 7. ‚ö° Transiciones y Animaciones

#### Duraciones de Transici√≥n (Tailwind)

```scss
// ‚úÖ CORRECTO: Usar clases de Tailwind
.element {
  @apply transition-all;           // todas las propiedades
  @apply transition-colors;        // solo colores
  @apply transition-transform;     // solo transform
  @apply transition-opacity;       // solo opacity

  // Duraciones
  @apply duration-75;    // 75ms
  @apply duration-100;   // 100ms
  @apply duration-150;   // 150ms - r√°pido
  @apply duration-200;   // 200ms - est√°ndar
  @apply duration-300;   // 300ms - medio
  @apply duration-500;   // 500ms - lento
  @apply duration-700;   // 700ms - muy lento

  // Easing functions
  @apply ease-linear;
  @apply ease-in;
  @apply ease-out;
  @apply ease-in-out;
}

// ‚ùå PROHIBIDO: Duraciones hardcodeadas
.element {
  transition: all 250ms ease;  // ‚ùå Usar duration-200 o duration-300
  transition-duration: 0.4s;   // ‚ùå Usar duration-500
}
```

#### Animaciones Predefinidas

```scss
// ‚úÖ CORRECTO: Animaciones de Tailwind
.element {
  @apply animate-spin;       // Girar continuamente
  @apply animate-ping;       // Pulso que crece
  @apply animate-pulse;      // Fade in/out
  @apply animate-bounce;     // Rebote
}

// Animaci√≥n personalizada (solo si es necesaria)
@keyframes shimmer {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.6; }
}

.element {
  animation: shimmer 2s ease-in-out infinite;
}
```

---

### 8. üì± Breakpoints (Responsive)

#### Breakpoints de Tailwind (NO modificar)

```scss
// Sistema de breakpoints de Tailwind
sm:  640px   // Tel√©fonos grandes
md:  768px   // Tablets
lg:  1024px  // Laptops
xl:  1280px  // Desktops
2xl: 1536px  // Pantallas grandes

// ‚úÖ CORRECTO: Usar prefijos responsive
.element {
  @apply w-full;           // Mobile first
  @apply md:w-1/2;         // 50% en tablets+
  @apply lg:w-1/3;         // 33% en laptops+
  @apply xl:w-1/4;         // 25% en desktops+
}

// En JSX
<div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">

// ‚ùå PROHIBIDO: Media queries personalizadas sin justificaci√≥n
@media (min-width: 900px) {  // ‚ùå No est√° en la escala de Tailwind
  .element { width: 50%; }
}
```

---

### 9. üîù Z-Index (Capas)

#### Sistema de Z-Index Sem√°ntico

```scss
// ‚úÖ CORRECTO: Usar clases de Tailwind
.element {
  @apply z-0;      // 0
  @apply z-10;     // 10 - elementos sobre el contenido
  @apply z-20;     // 20 - overlays
  @apply z-30;     // 30 - modals
  @apply z-40;     // 40 - popovers/tooltips
  @apply z-50;     // 50 - navegaci√≥n fija
  @apply z-auto;   // auto
}

// Valores negativos (usar con cuidado)
.element {
  @apply -z-10;    // -10 - bajo el contenido
  @apply -z-50;    // -50 - fondos
}

// ‚ùå PROHIBIDO: Z-index arbitrarios
.element {
  z-index: 999;    // ‚ùå Usar z-50 o justificar
  z-index: 1;      // ‚ùå Usar z-10
  z-index: 5;      // ‚ùå No est√° en escala de Tailwind
}
```

---

### 10. üå´Ô∏è Opacidades

#### Escala de Opacidad de Tailwind

```scss
// ‚úÖ CORRECTO: Usar clases de Tailwind
.element {
  @apply opacity-0;      // 0%   - invisible
  @apply opacity-5;      // 5%
  @apply opacity-10;     // 10%
  @apply opacity-20;     // 20%
  @apply opacity-25;     // 25%
  @apply opacity-30;     // 30%
  @apply opacity-40;     // 40%
  @apply opacity-50;     // 50%  - semi-transparente
  @apply opacity-60;     // 60%
  @apply opacity-70;     // 70%
  @apply opacity-75;     // 75%
  @apply opacity-80;     // 80%
  @apply opacity-90;     // 90%
  @apply opacity-95;     // 95%
  @apply opacity-100;    // 100% - completamente visible
}

// Opacidad con variables de color (preferido)
.element {
  background-color: hsl(var(--primary) / 0.1);   // 10%
  background-color: hsl(var(--primary) / 0.5);   // 50%
  background-color: hsl(var(--primary) / 0.8);   // 80%
  color: hsl(var(--foreground) / 0.7);           // 70%
}

// ‚ùå PROHIBIDO: Valores decimales arbitrarios
.element {
  opacity: 0.65;  // ‚ùå Usar opacity-65 o el valor m√°s cercano
  opacity: 0.33;  // ‚ùå Usar opacity-30 o opacity-40
}
```

---

## üõ†Ô∏è Utilidades Especiales

### Backdrop Filters

```scss
// ‚úÖ CORRECTO: Backdrop blur de Tailwind
.glass {
  @apply backdrop-blur-none;  // 0
  @apply backdrop-blur-sm;    // 4px
  @apply backdrop-blur;       // 8px
  @apply backdrop-blur-md;    // 12px
  @apply backdrop-blur-lg;    // 16px
  @apply backdrop-blur-xl;    // 24px
  @apply backdrop-blur-2xl;   // 40px
  @apply backdrop-blur-3xl;   // 64px
}

// Otros backdrop effects
.element {
  @apply backdrop-brightness-50;   // Oscurecer
  @apply backdrop-brightness-150;  // Aclarar
  @apply backdrop-contrast-125;    // M√°s contraste
  @apply backdrop-grayscale;       // Blanco y negro
  @apply backdrop-saturate-150;    // M√°s saturaci√≥n
}
```

### Filters

```scss
// ‚úÖ CORRECTO: Filtros de Tailwind
.element {
  @apply blur-sm;         // Desenfoque
  @apply brightness-50;   // Brillo
  @apply contrast-125;    // Contraste
  @apply grayscale;       // Escala de grises
  @apply invert;          // Invertir colores
  @apply saturate-150;    // Saturaci√≥n
  @apply sepia;           // Efecto sepia
}
```

---

## üìã Checklist de Cumplimiento

### Antes de Escribir Estilos

- [ ] ¬øRevis√© las clases de Tailwind para esta propiedad?
- [ ] ¬øExiste una variable de shadcn/Tailwind para este valor?
- [ ] ¬øVerifiqu√© que NO estoy hardcodeando valores?
- [ ] ¬øPuedo usar una clase de utilidad en lugar de CSS personalizado?
- [ ] ¬øEste valor funciona en todos los temas (light/dark)?

### Durante Desarrollo

- [ ] ¬øEstoy usando `@apply` con clases de Tailwind?
- [ ] ¬øLos colores usan `hsl(var(--variable))`?
- [ ] ¬øLos espacios usan la escala de Tailwind (0, 1, 2, 3, 4...)?
- [ ] ¬øLas transiciones usan duraciones est√°ndar?
- [ ] ¬øLos breakpoints usan sm/md/lg/xl/2xl?

### Despu√©s de Implementar

- [ ] ¬øNo hay valores m√°gicos (n√∫meros hardcodeados)?
- [ ] ¬øTodo se adapta a cambios de tema?
- [ ] ¬øEl dise√±o es responsive usando breakpoints est√°ndar?
- [ ] ¬øLas sombras y opacidades usan variables HSL?
- [ ] ¬øDocument√© cualquier excepci√≥n necesaria?

---

## üö´ Anti-Patrones Prohibidos

### ‚ùå NO HACER NUNCA

```scss
// ‚ùå Valores hardcodeados en lugar de clases
.component {
  padding: 16px;                    // ‚ùå Usar @apply p-4
  margin: 8px 12px;                 // ‚ùå Usar @apply mx-3 my-2
  font-size: 18px;                  // ‚ùå Usar @apply text-lg
  border-radius: 8px;               // ‚ùå Usar @apply rounded-lg
  box-shadow: 0 4px 6px rgba(0,0,0,.1);  // ‚ùå Usar @apply shadow-md
}

// ‚ùå Colores RGB/HEX directos
.component {
  background-color: #ffffff;        // ‚ùå Usar hsl(var(--background))
  color: rgb(0, 0, 0);              // ‚ùå Usar hsl(var(--foreground))
  border-color: #e5e7eb;            // ‚ùå Usar hsl(var(--border))
}

// ‚ùå Valores arbitrarios sin justificaci√≥n
.component {
  padding: 18px;                    // ‚ùå No est√° en escala de Tailwind
  font-size: 19px;                  // ‚ùå Usar text-lg (18px) o text-xl (20px)
  z-index: 999;                     // ‚ùå Usar z-50
}

// ‚ùå Mezclar sistemas de espaciado
.component {
  @apply p-4;                       // Tailwind
  margin: 20px;                     // ‚ùå Hardcoded (usar @apply m-5)
}

// ‚ùå Media queries personalizadas
@media (min-width: 900px) {         // ‚ùå Usar lg: (1024px)
  .component { width: 50%; }
}
```

---

## ‚úÖ Patrones Correctos

### Componente Completo con Sistema de Dise√±o

```scss
.profile-card {
  // Espaciado con escala de Tailwind
  @apply p-6 m-4 gap-4;

  // Colores con variables HSL
  @apply bg-card text-card-foreground;
  @apply border border-border;

  // Border radius con escala de Tailwind
  @apply rounded-2xl;

  // Sombra con clase de Tailwind
  @apply shadow-lg;

  // Transici√≥n con duraci√≥n est√°ndar
  @apply transition-all duration-300;

  // Responsive con breakpoints
  @apply w-full md:w-1/2 lg:w-1/3;

  &__header {
    // Espaciado
    @apply mb-4 pb-4;
    // Borde inferior
    @apply border-b border-border;
  }

  &__title {
    // Tipograf√≠a con clases de Tailwind
    @apply text-2xl font-bold text-foreground;
    // Espaciado
    @apply mb-2;
  }

  &__description {
    // Tipograf√≠a y color
    @apply text-sm text-muted-foreground leading-relaxed;
  }

  &__actions {
    // Layout
    @apply flex gap-3 mt-6;
  }

  &__button {
    // Colores con variables
    @apply bg-primary text-primary-foreground;
    // Espaciado
    @apply px-6 py-3;
    // Border radius
    @apply rounded-lg;
    // Tipograf√≠a
    @apply font-medium;
    // Transici√≥n
    @apply transition-all duration-200;
    // Hover con opacidad
    @apply hover:bg-primary/90;

    &--secondary {
      @apply bg-secondary text-secondary-foreground;
      @apply hover:bg-secondary/90;
    }
  }
}
```

### Componente Glass Morphism

```scss
.glass-card {
  // Backdrop effects
  backdrop-filter: blur(20px) saturate(180%);
  -webkit-backdrop-filter: blur(20px) saturate(180%);

  // Fondo con opacidad de variable HSL
  background-color: hsl(var(--card) / 0.7);

  // Borde con opacidad
  @apply border border-border/20;

  // Border radius
  @apply rounded-3xl;

  // Espaciado
  @apply p-6;

  // Sombra adaptativa
  box-shadow:
    0 4px 12px hsl(var(--foreground) / 0.05),
    0 8px 24px hsl(var(--foreground) / 0.08);
}
```

---

## üìç Ubicaci√≥n de Archivos del Sistema

```text
src/infrastructure/assets/
‚îú‚îÄ‚îÄ globals.scss          # Estilos base + reset + variables globales
‚îú‚îÄ‚îÄ themes.scss           # Definiciones de temas (light/dark/custom)
‚îî‚îÄ‚îÄ design-tokens.scss    # (Solo si es absolutamente necesario) Tokens adicionales
```

---

## üîç Verificaci√≥n del Sistema

### Comandos de Validaci√≥n

```bash
# Ver variables CSS del proyecto
grep -r "^[[:space:]]*--" src/infrastructure/assets/

# Buscar valores hardcodeados (requiere revisi√≥n manual)
grep -r "px\|rem\|em" src/**/*.scss | grep -v "@apply"

# Buscar colores hex/rgb hardcodeados
grep -r "#[0-9a-fA-F]\{3,6\}\|rgba\?\(" src/**/*.scss
```

---

## üéì Recursos y Documentaci√≥n

### Referencias Oficiales

- [shadcn/ui Theming](https://ui.shadcn.com/docs/theming)
- [Tailwind CSS Documentation](https://tailwindcss.com/docs)
- [Tailwind Spacing Scale](https://tailwindcss.com/docs/customizing-spacing)
- [Tailwind Colors](https://tailwindcss.com/docs/customizing-colors)
- [Tailwind Typography](https://tailwindcss.com/docs/font-size)
- [Tailwind Border Radius](https://tailwindcss.com/docs/border-radius)
- [Tailwind Shadows](https://tailwindcss.com/docs/box-shadow)

---

## üß™ Casos de Uso Especiales

### Cu√°ndo Crear Variables Personalizadas

Solo en estos casos excepcionales:

1. **Valores de marca espec√≠ficos**
   ```scss
   :root {
     /* Logo corporativo que no encaja en primary */
     --brand-accent: 280 70% 55%;
   }
   ```

2. **Estados de dominio espec√≠fico**
   ```scss
   :root {
     /* Estados de proceso de negocio */
     --status-pending: 45 100% 51%;
     --status-processing: 210 100% 56%;
     --status-completed: 142 76% 36%;
   }
   ```

3. **Integraciones con terceros**
   ```scss
   :root {
     /* Colores de servicio externo */
     --github-green: 94 38% 56%;
     --stripe-purple: 261 51% 51%;
   }
   ```

**Requisitos para variables personalizadas:**

- [ ] Documentar por qu√© no se puede usar una variable existente
- [ ] Usar formato HSL
- [ ] Definir para todos los temas (light/dark)
- [ ] Justificar su uso en m√∫ltiples lugares (3+)
- [ ] Obtener aprobaci√≥n del equipo

---

## üîÑ Flujo de Decisi√≥n Completo

```mermaid
flowchart TD
    A[Necesito aplicar un estilo] --> B{¬øExiste clase de Tailwind?}
    B -->|S√≠| C[Usar clase de Tailwind con @apply]
    B -->|No| D{¬øEs un color?}
    D -->|S√≠| E{¬øExiste variable HSL de shadcn?}
    E -->|S√≠| F[Usar hsl var--variable]
    E -->|No| G{¬øPuedo usar con opacidad?}
    G -->|S√≠| H[Usar variable existente + opacidad]
    G -->|No| I{¬øEs dominio espec√≠fico?}
    I -->|No| J[Reconsiderar dise√±o]
    I -->|S√≠| K[Crear variable HSL documentada]
    D -->|No| L{¬øEs espaciado/tama√±o?}
    L -->|S√≠| M{¬øEst√° en escala de Tailwind?}
    M -->|S√≠| C
    M -->|No| N{¬øEs realmente necesario?}
    N -->|No| J
    N -->|S√≠| O[Usar valor arbitrario de Tailwind]
```

---

## üìù Mantra del Sistema de Dise√±o

> **"Tailwind primero. Variables HSL siempre. Valores hardcodeados nunca. Sistema de dise√±o centralizado, consistente y din√°mico."**

---

## ‚ú® Validaci√≥n Final Extendida

Antes de considerar completo cualquier trabajo con estilos:

### Colores
- [ ] ¬øUs√© solo variables HSL de shadcn (`hsl(var(--variable))`)?
- [ ] ¬øNo hay valores hex (#...) ni rgb(...) hardcodeados?
- [ ] ¬øLos colores funcionan en todos los temas?

### Tipograf√≠a
- [ ] ¬øUs√© clases de Tailwind (`text-*`, `font-*`)?
- [ ] ¬øNo hay tama√±os de fuente en px hardcodeados?
- [ ] ¬øLos pesos de fuente usan clases (`font-bold`, etc.)?

### Espaciado
- [ ] ¬øUs√© la escala de Tailwind (`p-4`, `m-6`, `gap-3`)?
- [ ] ¬øNo hay padding/margin en px/rem hardcodeados?
- [ ] ¬øLos espacios son consistentes con el resto del dise√±o?

### Bordes y Radius
- [ ] ¬øUs√© clases de border (`border`, `border-2`)?
- [ ] ¬øEl border-radius usa clases (`rounded-lg`, `rounded-2xl`)?
- [ ] ¬øLos colores de borde usan variables (`border-border`)?

### Sombras
- [ ] ¬øUs√© clases de shadow (`shadow-md`, `shadow-lg`)?
- [ ] ¬øLas sombras personalizadas usan variables HSL?
- [ ] ¬øNo hay rgba(...) en box-shadow?

### Responsive
- [ ] ¬øUs√© breakpoints est√°ndar (`sm:`, `md:`, `lg:`, `xl:`)?
- [ ] ¬øNo hay media queries personalizadas sin justificar?
- [ ] ¬øEl dise√±o es mobile-first?

### General
- [ ] ¬øNo hay valores m√°gicos (n√∫meros arbitrarios)?
- [ ] ¬øTodo est√° documentado si es una excepci√≥n?
- [ ] ¬øEl c√≥digo es mantenible y escalable?
- [ ] ¬øOtro desarrollador entender√≠a por qu√© se hizo as√≠?

**Si alguna respuesta es NO, el trabajo NO est√° completo.**

---

## üéØ Objetivo Final

Este sistema garantiza:

- ‚úÖ **Consistencia visual** en toda la aplicaci√≥n
- ‚úÖ **Temas din√°micos** sin modificar componentes
- ‚úÖ **Mantenibilidad** a largo plazo
- ‚úÖ **Escalabilidad** sin comprometer el dise√±o
- ‚úÖ **Colaboraci√≥n efectiva** con un lenguaje com√∫n
- ‚úÖ **Rendimiento √≥ptimo** usando clases de Tailwind
- ‚úÖ **Accesibilidad** con contraste adecuado en todos los temas

---

**Fin del documento.**
