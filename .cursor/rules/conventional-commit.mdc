---
alwaysApply: true
description: "Regla avanzada y robusta para generar mensajes de commit convencionales en espa√±ol, centrados en valor al usuario. Muestra solo el mensaje final en un bloque de texto copiable."
triggers: ["commit", "git", "message", "‚ú®", "@conventional-commits.mdc"]
priority: 1
autoActivate: true
context: ["source-control", "commit"]
cursorBehavior: "intervene-immediately"
---

# ‚ö°Ô∏è Regla Avanzada de Commits - Solo Mensaje Copiable

## üß† Prop√≥sito

Esta regla genera **√∫nicamente el mensaje de commit final**, listo para copiar y pegar.
No muestra explicaciones, pasos, ni sugerencias adicionales.
El resultado **se presenta dentro de un bloque de texto plano copiable** para uso inmediato.

---

## üöÄ Proceso de An√°lisis Autom√°tico

### 1. Detecci√≥n del Tipo de Commit

Analiza los archivos modificados y aplica estas reglas en orden de prioridad:

| Tipo | Detectar cuando... | Valor para el usuario |
|------|-------------------|----------------------|
| `feat` | Se agregan nuevos componentes, p√°ginas, m√≥dulos, funcionalidades, endpoints o capacidades | Permite hacer algo nuevo que antes no era posible |
| `fix` | Se corrigen errores, bugs, validaciones fallidas, renders incorrectos, l√≥gica rota | Corrige un problema que imped√≠a usar correctamente una funcionalidad |
| `refactor` | Se reestructura c√≥digo sin cambiar comportamiento (extracci√≥n, renombrado, reorganizaci√≥n) | Mejora la mantenibilidad sin afectar la experiencia del usuario |
| `perf` | Se optimiza rendimiento, carga, memoria, tiempos de respuesta | Acelera o reduce consumo de recursos en una funcionalidad existente |
| `test` | Se agregan o modifican archivos de prueba (.test., .spec., coverage) | Aumenta la confiabilidad y estabilidad del sistema |
| `docs` | Se modifican archivos README, .md, comentarios JSDoc, documentaci√≥n t√©cnica | Facilita el entendimiento y uso del c√≥digo |
| `style` | Se ajustan estilos visuales (.scss, .css), temas, colores, espaciados | Mejora la apariencia o consistencia visual |
| `chore` | Se actualizan dependencias, configuraciones, scripts de build, herramientas | Mantiene el proyecto actualizado sin afectar funcionalidad |
| `build` | Se modifica webpack, babel, tsconfig, package.json, configuraci√≥n de build | Optimiza el proceso de construcci√≥n del proyecto |
| `ci` | Se cambian pipelines, GitHub Actions, bitbucket-pipelines, amplify.yml | Mejora el proceso de integraci√≥n y despliegue continuo |
| `revert` | Se revierten commits previos | Deshace cambios que causaron problemas |

**Criterio de decisi√≥n**: Si un cambio involucra m√∫ltiples tipos, elige el que tenga **mayor impacto en el usuario final**.

---

### 2. Identificaci√≥n del Scope (√Årea)

Mapea autom√°ticamente el scope seg√∫n las rutas modificadas:

| Ruta modificada | Scope sugerido |
|----------------|---------------|
| `src/modules/academy/` | `academy` |
| `src/modules/content/` | `content` |
| `src/modules/category/` | `category` |
| `src/modules/competence/` | `competence` |
| `src/modules/learning-path/` | `learning-path` |
| `src/modules/customization/` | `customization` |
| `src/modules/expert/` | `expert` |
| `src/modules/skill/` | `skill` |
| `src/modules/catalog/` | `catalog` |
| `src/modules/provider/` | `provider` |
| `src/modules/bulk-certificate-downloader/` | `certificates` |
| `src/components/` (componentes globales) | `components` |
| `src/utils/` | `utils` |
| `src/core/` | `core` |
| `src/domain/` | `domain` |
| Configuraci√≥n (webpack, babel, tsconfig) | `config` |
| package.json, dependencies | `deps` |
| Pipelines, CI/CD | `ci` |
| Tests | `tests` |
| Documentaci√≥n | `docs` |

**Reglas adicionales**:
- Si se modifican m√∫ltiples m√≥dulos relacionados, usa el scope del m√≥dulo principal
- Si son componentes transversales, usa `components`
- Si afecta m√∫ltiples √°reas sin relaci√≥n, omite el scope: `feat: permite...`

---

### 3. Construcci√≥n del Mensaje (Subject)

#### Estructura obligatoria:
```
<verbo> + <beneficio/capacidad> + <contexto espec√≠fico>
```

#### Verbos seg√∫n tipo de commit:

| Tipo | Verbos recomendados |
|------|-------------------|
| `feat` | permite, habilita, agrega, incorpora, introduce |
| `fix` | corrige, soluciona, repara, resuelve |
| `refactor` | mejora, simplifica, reorganiza, centraliza |
| `perf` | optimiza, acelera, reduce |
| `style` | ajusta, actualiza, estandariza (estilos visuales) |
| `docs` | documenta, actualiza, aclara |
| `test` | valida, asegura, cubre |
| `chore` | actualiza, mantiene, configura |

#### Criterios de calidad:

‚úÖ **Debe contener**:
- Verbo en presente (3¬™ persona)
- Beneficio concreto para el usuario/desarrollador
- Contexto espec√≠fico (qu√© funcionalidad, d√≥nde, para qu√©)

‚ùå **Debe evitar**:
- Verbos t√©cnicos sin contexto: "a√±ade", "cambia", "modifica"
- Detalles de implementaci√≥n: "usa useState", "implementa useEffect"
- T√©rminos vagos: "mejora el c√≥digo", "actualiza componente"

#### Ejemplos de transformaci√≥n:

| ‚ùå Mensaje t√©cnico | ‚úÖ Mensaje con valor |
|-------------------|---------------------|
| "a√±ade componente ReportRequest" | "permite solicitar reportes de estad√≠sticas desde panel de contenido" |
| "modifica funci√≥n de fecha" | "corrige formato de fecha en selector de rango para reportes" |
| "refactoriza hook" | "simplifica l√≥gica de carga de datos mejorando mantenibilidad" |
| "actualiza estilos del modal" | "mejora legibilidad del modal de confirmaci√≥n en dispositivos m√≥viles" |

---

### 4. Determinaci√≥n del Cuerpo (Body)

Incluye cuerpo del commit cuando se cumplan **al menos 2** de estos criterios:

- ‚úÖ Se modifican **m√°s de 3 archivos** en diferentes √°reas
- ‚úÖ El cambio afecta **m√∫ltiples capas** (presentaci√≥n + l√≥gica + dominio)
- ‚úÖ Se introducen **breaking changes** o cambios de comportamiento
- ‚úÖ Se requiere explicar **por qu√©** se hizo el cambio (contexto de negocio)
- ‚úÖ Hay **detalles t√©cnicos importantes** que el reviewer debe conocer
- ‚úÖ El cambio est√° relacionado con un **ticket/issue** espec√≠fico

#### Estructura del cuerpo:

```
<tipo>(<scope>): <mensaje principal>

<l√≠nea en blanco>

* <Detalle t√©cnico 1>
* <Detalle t√©cnico 2>
* <Detalle t√©cnico 3>

<l√≠nea en blanco (opcional)>

Relacionado: PL-XXXX
```

**Contenido del cuerpo** (elige lo relevante):
- Qu√© cambi√≥ a nivel t√©cnico (sin ser obvio)
- Por qu√© se tom√≥ esa decisi√≥n
- Qu√© se consider√≥ como alternativa y por qu√© se descart√≥
- Impacto esperado o m√©tricas mejoradas
- Advertencias para el reviewer o equipo
- Referencias a tickets/issues

---

## üîç Validaci√≥n T√©cnica Autom√°tica

Antes de generar el mensaje, verifica contra `commitlint.config.js`:

- ‚úÖ `type` est√° en la lista permitida
- ‚úÖ `type` en lower-case
- ‚úÖ `scope` en lower-case, camelCase o kebab-case (si existe)
- ‚úÖ `subject` no empieza con may√∫scula (salvo nombres propios)
- ‚úÖ `subject` sin punto final
- ‚úÖ `subject` m√≠nimo 10 caracteres, m√°ximo 300
- ‚úÖ `header` completo m√°ximo 300 caracteres
- ‚úÖ `body` con l√≠nea en blanco previa (si existe)
- ‚úÖ Cada l√≠nea del body m√°ximo 300 caracteres

---

## üéØ Resultado Final

**Formato de salida**:

```
<tipo>(<scope>): <mensaje enfocado en valor>

* <Detalle t√©cnico relevante>
* <Detalle t√©cnico relevante>
* <Detalle t√©cnico relevante>
```

**Reglas de presentaci√≥n**:
- Solo mostrar el mensaje final en bloque de texto copiable
- Sin explicaciones adicionales antes o despu√©s
- Sin emojis en el mensaje (permitidos solo en el cuerpo si aportan claridad)
- Mensaje completo listo para `git commit -m "..."`

---

## üìã Checklist de Revisi√≥n Interna (No mostrar al usuario)

Antes de entregar el mensaje, verifica mentalmente:

- [ ] ¬øEl tipo refleja el impacto principal del cambio?
- [ ] ¬øEl scope es correcto seg√∫n las rutas modificadas?
- [ ] ¬øEl mensaje explica qu√© mejora o permite, no solo qu√© se hizo?
- [ ] ¬øEl verbo es apropiado y est√° en presente?
- [ ] ¬øSe incluy√≥ contexto suficiente para entender el valor?
- [ ] ¬øEl mensaje cumple las reglas de commitlint?
- [ ] ¬øEl cuerpo aporta informaci√≥n t√©cnica √∫til sin ser redundante?
- [ ] ¬øEl mensaje es comprensible para alguien que revise el historial en 6 meses?

---

**üí° No se muestran pasos intermedios, solo el mensaje final copiable.**
